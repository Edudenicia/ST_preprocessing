library(raster)
levelplot(
raster(
"/Users/ricardo/GitHub/suitability/_data/Denpasar/layers/Population_Density.tif"
))
library(rasterVis)
levelplot(
raster(
"/Users/ricardo/GitHub/suitability/_data/Denpasar/layers/Population_Density.tif"
))
raster(
"/Users/ricardo/GitHub/suitability/_data/Denpasar/layers/Population_Density.tif"
)
raster("/Users/ricardo/Library/Mobile Documents/com~apple~CloudDocs/_R/suitability/suitability a0.92/_data/Denpasar/layers/Denpasar_pop_2015.tif")
mean(c(115.0792, 115.3775))
mean(c(-8.849696, -8.481177))
library(raster)
library(sp)
library(leaflet)
# User input CRS
user_crs <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
# lower left:
lower_left <- SpatialPoints(coords = data.frame(x = 115.2284,
y = -8.665437),
proj4string=CRS(user_crs))
# top right:
top_right <- SpatialPoints(coords = data.frame(x = -98.5986,
y = 20.01847),
proj4string=CRS(user_crs))
raster("/Users/ricardo/Library/Mobile Documents/com~apple~CloudDocs/_R/suitability/suitability a0.92/_data/Denpasar/layers/Denpasar_pop_2015.tif")
min(c(115.0792, 115.3775))
min(c(-8.849696, -8.481177))
max(c(115.0792, 115.3775))
max(c(-8.849696, -8.481177))
user_crs <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
# lower left:
lower_left <- SpatialPoints(coords = data.frame(x = 115.0792,
y = -8.849696),
proj4string=CRS(user_crs))
# top right:
top_right <- SpatialPoints(coords = data.frame(x = 115.3775,
y = -8.481177),
proj4string=CRS(user_crs))
# GHSL CRS
ghsl_crs <- '+proj=moll +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs'   # for 1000m and 250m
# If needed, R will make the transformation.
if(as.character(crs(lower_left)) != ghsl_crs){
lower_left <- spTransform(x = lower_left,
CRSobj = ghsl_crs)
}
if(as.character(crs(top_right)) != ghsl_crs){
top_right <- spTransform(x = top_right,
CRSobj = ghsl_crs)
}
my_extent <- extent(c(as.data.frame(lower_left)$x,
as.data.frame(top_right)$x,
as.data.frame(lower_left)$y,
as.data.frame(top_right)$y))
# crop raster stack based on the definition of the study area
built_up <- crop(x = raster("_input/2014.tif"),
y = my_extent)
leaflet() %>% addTiles() %>%
addRasterImage(built_up, opacity = 0.5)
